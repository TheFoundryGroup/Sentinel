<html>
<head>
    <link type="text/css" rel="stylesheet" href="css/materialize.min.css"  media="screen,projection"/>
    <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
</head>
<body>

#parse("/templates/nav.vtl")

<div class="container center-align row">
    <h1 class="s12">Welcome, $loggedIn!</h1>

    <div class="divider"></div>

    #if(!$judge)

        <div class="col s12 z-depth-1" style="padding-left: 1em; padding-right: 1em;">
            <ul id="submissions" class="collection with-header left-align" data-collapsible="accordion">
                <li class="collection-header"><h5>Submissions</h5></li>
                <li class="collection-item" id="empty-submissions">No submissions</li>
            </ul>
            <h3>Submit a solution</h3>
            #parse("/templates/file.vtl")
        </div>

        <div class="divider"></div>

        <div class="col s6 z-depth-1">
            <h1>Problems</h1>
            <ul class="collapsible" data-collapsible="accordion">
            #foreach($problem in $problems)
                <li>
                    <div class="collapsible-header">$problem.getName()</div>
                    <div class="collapsible-body">
                        $problem.getDescription().replaceAll("\n", "<br/>")
                        <br/>
                        #parse("/templates/file.vtl")
                    </div>
                </li>
            #end
            </ul>
        </div>

        <div class="col s6 z-depth-1">
            <h1>Clarifications</h1>
            #parse("/templates/clarification.vtl")
        </div>
    #end



</div>

<script type="text/javascript" src="js/materialize.min.js"></script>
<script>
    $(document).ready(function(){$('.collapsible').collapsible();});
    var socket = new WebSocket("ws://"+window.location.hostname+"/websocket");
    socket.addEventListener('message', function (event) {
        var json = JSON.parse(event.data);
        var reason = json.reason;
        console.log(reason);
        if (reason=="submissions") {
            generateSubmissions(json.data);
        }
        if (reason=="update-submission") {
            updateSubmission(json.data);
        }
    });
    var message = {
        "auth": "$websocketAuth",
        "teamName": "$loggedIn",
        "judge": $judge
    }
    socket.addEventListener('open', function (event) {
        console.log("Connection open!");
        socket.send(JSON.stringify(message));
    });

    function getSubmissionId(sub) {
        return sub.problem+"-"+sub.attempt;
    }

    function HTMLify(str) {
        return str.replace(/\n/ig, "<br/>");
    }

    function generateSubmissions(data) {
        if (data.length!=0) document.getElementById("empty-submissions").outerHTML="";
        else return;

        var ul = document.getElementById("submissions");
        data.sort(function(a,b) {return b.timestamp-a.timestamp});
        for (var i = 0; i<data.length; i++) {
            var sub = data[i];
            var status = sub.status;
            var color = "blue";
            if (status=="COMPILE_ERROR" || status=="RUNTIME_ERROR" || status=="INCORRECT") color = "red";
            if (status=="CORRECT") color = "green";
            var badge = "<span class='new badge "+color+"' data-badge-caption=''>"+status+"</span>";
            ul.innerHTML+="<li class='collection-item' id='"+getSubmissionId(sub)+"'>"+badge+sub.problem+", attempt "+sub.attempt+
                    (sub.error=="" ? "" : "<p>Error:<br/><pre class='red-text'>"+sub.error+"</pre></p>")+
                    "</li>";
        }
    }

    function updateSubmission(sub) {
        var li = document.getElementById(getSubmissionId(sub))
        var status = sub.status;
        var color = "blue";
        if (status=="COMPILE_ERROR" || status=="RUNTIME_ERROR" || status=="INCORRECT") color = "red";
        if (status=="CORRECT") color = "green";
        var badge = "<span class='new badge "+color+"' data-badge-caption=''>"+status+"</span>";
        li.outerHTML="<li class='collection-item' id='"+getSubmissionId(sub)+"'>"+badge+sub.problem+", attempt "+sub.attempt+
                (sub.error=="" ? "" : "<p>Error:<br/><pre class='red-text'>"+sub.error+"</pre></p>")+
                "</li>";
    }

</script>
</body>
</html>